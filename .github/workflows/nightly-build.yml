name: nightly
on:
  push:
    branches: [main, ci]
jobs:
  move-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Move ci tag
        run: |
          mkdir repo
          git clone -b "$BRANCH_NAME" "https://github.com/${GITHUB_REPOSITORY}" repo
          cd repo
          bash .github/workflows/move-tag.sh "nightly-build" "Last commit build by the CI"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  check-aya-version:
    runs-on: ubuntu-latest
    outputs:
      isSnapshot: ${{ steps.check.outputs.isSnapshot }}
    steps:
      - uses: actions/checkout@v2
      - name: Check snapshot version
        id: check
        run: |
          ver="$(cat ./gradle/deps.properties | grep "version.project" | cut -d'=' -f2)"
          isSnapshot="$(echo "$ver" | grep -q "SNAPSHOT" && echo true || echo false)"
          echo "Detected Project Version: $ver"
          echo "Detected Project Version is a SNAPSHOT: $isSnapshot"
          echo "::set-output name=isSnapshot::${isSnapshot}"

  publish-snapshot:
    needs: [check-aya-version]
    runs-on: ubuntu-latest
    if: github.repository == 'aya-prover/aya-dev' && needs.check-aya-version.outputs.isSnapshot == 'true'
    env:
      ossrhUsername: ${{ secrets.OSSRHUSERNAME }}
      ossrhPassword: ${{ secrets.OSSRHPASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java 19
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '19'
      - name: gradle publish
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: publish --info --no-daemon --stacktrace --warning-mode all

  nightly-build:
    needs: [move-tag]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86-64
            binaryExt: ''
          - os: macos-latest
            arch: x86-64
            binaryExt: ''
          - os: windows-latest
            arch: x86-64
            binaryExt: '.exe'
    steps:
      - uses: actions/checkout@v2

      - name: Setup Java 19
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '19'

      - name: gradle jlink
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: jlink --info --no-daemon --stacktrace --warning-mode all

      - name: gradle fatJar
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: fatjar --info --no-daemon --stacktrace --warning-mode all

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.os }} == 'windows-latest'

      - name: gradle nativeCompile
        uses: eskatos/gradle-command-action@v1
        with:
          dependencies-cache-enabled: true
          arguments: nativeCompile --info --no-daemon --stacktrace --warning-mode all

      - name: Copy fat jar
        run: |
          cp ./lsp/build/libs/lsp-*-fat.jar ./lsp-fatjar.jar
          cp ./cli/build/libs/cli-*-fat.jar ./cli-fatjar.jar

      - name: Copy aya Native Image
        run: cp ./cli/build/native/nativeCompile/aya${{ matrix.binaryExt }} ./aya-native-${{ matrix.os }}_${{ matrix.arch }}${{ matrix.binaryExt }}

      - name: Zip Artifacts (Windows)
        uses: papeloto/action-zip@v1
        with:
          files: ./lsp/build/image
          dest: aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip
        if: matrix.os == 'windows-latest'

      - name: Zip Artifacts (Unix)
        run: |
          root="$(pwd)"
          cd ./lsp/build/image
          zip -r "$root/aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip" .
        if: matrix.os != 'windows-latest'

      - name: Update Release
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          isPrerelease: false
          tag_name: nightly-build
          release_name: "Nightly builds"
          body_mrkdwn: |
            _These are latest builds, but the date on GitHub is frozen due to stupid limitations.
            Corresponding commit: <https://github.com/aya-prover/aya-dev/commit/${{ github.sha }}>_
          assets: aya-prover-jlink-${{ matrix.os }}_${{ matrix.arch }}.zip;lsp-fatjar.jar;cli-fatjar.jar;aya-native-${{ matrix.os }}_${{ matrix.arch }}${{ matrix.binaryExt }}|application/octet-stream
          replace_assets: true
          github_token: ${{ secrets.GH_TOKEN }}
