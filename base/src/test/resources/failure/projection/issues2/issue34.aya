prim I
prim intervalInv
def inline ~ => intervalInv
def Path (A : I -> Type) (a : A 0) (b : A 1) : Type => [| i |] A i {| ~ i := a | i := b |}
def Eq (A : Type) (a b : A) : Type => Path (\ i => A) a b
variable A : Type
def infix = {A : Type} => Eq A

def psqueeze {A : Type} {a a' : A} (p : a = a') (i : I) : a = p i => \j => p (I.squeeze i j)
