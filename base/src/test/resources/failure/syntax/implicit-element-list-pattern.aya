open data List (A : Type) | nil | cons {A} {List A}
open data Nat | O | S Nat

def good {A : Type} (xs : List A) (default : A) : A
| nil, default => default
| [ _, y ], default => y
| cons {x} {xs}, default => x

def bad {A : Type} (xs : List A) (default : A) : A
| nil, default => default
| [ _, {y} ], default => y
| cons {x} {xs}, default => x
