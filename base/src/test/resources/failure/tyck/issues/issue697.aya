prim I
prim arcoe
open struct Path (A : I -> Type) (a : A 0) (b : A 1) : Type
  | at (i : I) : A i {
    | 0 => a
    | 1 => b
  }
def path {A : I -> Type} (p : Pi (i : I) -> A i)
  => new Path A (p 0) (p 1) { | at i => p i }
def infix = {A : Type} (a b : A) : Type => Path (\ i => A) a b
def idp {A : Type} {a : A} : a = a => path (\ i => a)

def hfill2d {A : Type}
  {a b c d : A}
  (p : a = b)
  (q : b = d)
  (r : a = c)
  (i j : I) : A
  => (arcoe (\ k => (r.at k) = (q.at k)) p i).at j
def hcomp2d {A : Type}
  {a b c d : A}
  (p : a = b)
  (q : b = d)
  (r : a = c) : c = d
  => path (hfill2d p q r 1)

def sym {A : Type} {a b : A} (p : a = b) : b = a => hcomp2d (idp a) idp p
