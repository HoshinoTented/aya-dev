In file $FILE:6:29 ->

  4 | def test
  5 |  (F : Type -> Type)
  6 |  (g : Pi (X : F _) -> F (Neg X)) : Nat => g zero
                                   ^^

Error: Cannot check the expression of type
         F _
         (Normalized: F _)
       against the type
         Type
         (Normalized: Type)

In file $FILE:6:16 ->

  4 | def test
  5 |  (F : Type -> Type)
  6 |  (g : Pi (X : F _) -> F (Neg X)) : Nat => g zero
                      ^^

Error: Unsolved meta

In file $FILE:6:44 ->

  4 | def test
  5 |  (F : Type -> Type)
  6 |  (g : Pi (X : F _) -> F (Neg X)) : Nat => g zero
                                                  ^--^

Error: Cannot check the expression of type
         Nat
         (Normalized: Nat)
       against the type
         F <_>
         (Normalized: F <_>)

In file $FILE:6:42 ->

  4 | def test
  5 |  (F : Type -> Type)
  6 |  (g : Pi (X : F _) -> F (Neg X)) : Nat => g zero
                                                ^----^

Error: Cannot check the expression of type
         F (Neg <X>)
         (Normalized: F (Π (_ : <X>) → Empty))
       against the type
         Nat
         (Normalized: Nat)

4 error(s), 0 warning(s).
What are you doing?
