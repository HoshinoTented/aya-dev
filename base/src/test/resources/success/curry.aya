def curry (A B C : Type)
           (f : (Sig A ** B) -> C)
           (a : A) (b : B) : C
  => f (a, b)

def curry3 (A B C D : Type)
            (f : (Sig A B ** C) -> D)
            (a : A) (b : B) (c : C) : D
  => f (a, b, c)

def uncurry (A : Type) (B : Type) (C : Type)
             (f : Pi A B -> C)
             (p : Sig A ** B) : C
  => f (p.1) (p.2)

def uncurry3 (A : Type) (B : Type) (C : Type) (D : Type)
              (f : Pi A B C -> D)
              (p : Sig A B ** C) : D
  => f (p.1) (p.2) (p.3)
