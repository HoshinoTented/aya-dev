open import Paths

public open data Segment
| left | right
| seg (i : I) { i := right | ~ i := left }

def uniqueness (b : Segment) : left = b
| left => idp
| right => \i => seg i
| seg i => \j => seg (i ∧ j)
def isContrSegment : isContr Segment => (_, uniqueness)

private def funExt-lemma {A B : Type} (f g : A → B) (p : ∀ x → f x = g x) : A -> Segment -> B
| f, g, p, a, left => f a
| f, g, p, a, right => g a
| f, g, p, a, seg i => p a i

example def funExt' {A B : Type} (f g : A → B) (p : ∀ x → f x = g x) : f = g
  => \i x => funExt-lemma f g p x (seg i)
