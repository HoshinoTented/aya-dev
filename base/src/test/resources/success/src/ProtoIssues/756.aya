open import Paths

def sq1 {A B C : Type} {a : A} {b d : B} (f : A -> B -> C) (q : b = d) : f a b = f a d
  => pmap (f a) q

def sq2 {A B C : Type} {a c : A} {d : B} (f : A -> B -> C) (p : a = c) : f a d = f c d
  => pmap (\ x => f x d) p

def sq {A B C : Type} {a c : A} {b d : B} (f : A -> B -> C) (p : a = c) (q : b = d) : f a b = f c d
  => sq1 f q <==> sq2 f p
