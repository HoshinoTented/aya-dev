open import Paths
import Arith::Nat as N
open N using (+ as add, zero as Z, suc as S)

def two => S Z add S Z
def two-is-two : two = S (S Z) => idp

def invol-prefix : ~ 0 = 1 => idp

def psqueeze-infix {A : Type} {a b : A} (p : a = b) (i : I)
 : a = p i => \j => p (i /\ j)

def psqueeze-infix' {A : Type} {a b : A} (p : a = b) (i : I)
 : a = p i => \j => p (~((~ i) \/ (~ j)))

