universe u v

open data EventT : Type (lsuc u)
  | CarrierT (A : Type u)

def GetAgentT (T : EventT {universe u}) : Type u
  | CarrierT A => A

open struct Event (T : EventT {universe u}) : Type u
  | agent : GetAgentT {universe u} T

def Quantifier (A : Type u) : Type (lmax u (lsuc v)) => (A -> Type v) -> Type v

def Verb (T : EventT {universe u}) : Type (lmax u (lsuc v)) =>
   Quantifier {universe u, v} (Event T)
