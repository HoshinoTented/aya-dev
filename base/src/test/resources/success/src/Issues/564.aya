open import Paths
open import Arith::Nat

def +-assoc-redo : ∀ (n m p : Nat) → n + (m + p) = (n + m) + p
| zero, m, p => idp
| suc n, m, p => pmap suc (+-assoc-redo n m p)

def +-assoc-redo2 (n : Nat) : ∀ (m p : Nat) → n + (m + p) = (n + m) + p
| zero, m, p => idp
| suc n, m, p => pmap suc (+-assoc-redo2 n m p)

// TODO: test implicit patterns and implicit lambdas
