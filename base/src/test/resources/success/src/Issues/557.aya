open import Data::List
open import Data::List::Syntax
open import Arith::Nat
open import Paths
open import Nonsense::Test

open data Unit | unit

def what1 : (unit :< nil) >>= pure = (unit :< nil) => idp
def what2 : join (fmap (\ _x => 1 :< nil) (0 :< nil)) = (1 :< nil) => idp
def what3 : forwardTwice (intro unit) = intro {Unit} unit => idp
def what4 : forwardOnce (intro unit) = intro {Unit} unit => idp
