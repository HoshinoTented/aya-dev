open import Arith::Nat

example def ack Nat Nat : Nat
  | 0, n      => suc n
  | suc m, 0  => ack m 1
  | suc m, suc n => ack m (ack (suc m) n)

example def f Nat : Nat
  | 0 => zero
  | suc n => g (suc n)

example def g Nat : Nat
  | zero => 0
  | suc n => f n

example def just-pred (n : Nat) : Nat => pred n
example def pred Nat : Nat
  | zero => zero
  | suc n => just-pred n

