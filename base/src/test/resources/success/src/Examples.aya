open import Arith::Nat

example open data Int : Type
 | pos Nat
 | neg Nat { | 0 => pos 0 }

example def abs (n : Int) : Nat
 | pos n => n
 | neg n => n

example def abs2 (n : Int) => abs n

counterexample def overlap absBad (n : Int) : Nat
 | pos (suc n) => 1
 | pos zero => 1
 | neg n => 0
