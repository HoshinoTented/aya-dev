open import Data::List
open import Arith::Nat

def result : List Nat => (| (+) [ 1, 2, 3 ]  [ 4, 5, 6 ] |)

def result2 : List Nat => (| (+) [ 1, 2, 3 ]  [ 4, 5, 6 ]
                           | (+) [ 1, 2, 3 ]  [ 4, 5, 6 ] |)

-- Disallow empty idiom brackets
-- def result3 : List Nat => (||)

def result4 : List Nat => [ ]

def result5 : List Nat => (| [ 1, 2, 3 ] + [ 4, 5, 6 ] |)

def result6 : List Nat => (| [ 1, 2, 3 ] + [ 4, 5, 6 ]
                           | [ 1, 2, 3 ] + [ 4, 5, 6 ] |)

open import Paths

def check : result = result5 => idp
def check2 : result2 = result6 => idp
