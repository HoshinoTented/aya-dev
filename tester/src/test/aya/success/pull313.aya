\open \data Nat : \Set
 | zero
 | suc Nat

\data Fin (n : Nat) : \Set
 | suc m => fzero
 | suc m => fsuc (Fin m)

\def cover1 (f : Fin zero) : Nat
 | \impossible

\def cover2 (f : Fin (suc zero)) : Nat
 | fzero => zero
 | fsuc \impossible

\def finToNat (n : Nat) (a : Fin n) : Nat
 | zero, \impossible
 | suc zero, fzero => zero
 | suc n, fsuc a => suc (finToNat n a)
